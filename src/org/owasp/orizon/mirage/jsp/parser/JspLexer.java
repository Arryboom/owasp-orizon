/* Generated by: FreeCC 0.9.3. JspLexer.java */
package org.owasp.orizon.mirage.jsp.parser;

/** Token Manager */
@SuppressWarnings("unused")
public class JspLexer implements JspConstants {
    /** Debug output. */
    java.io.PrintStream debugStream=System.out;
    /** Set debug output. */
    public void setDebugStream(java.io.PrintStream ds) {
        debugStream=ds;
    }

    int[] jjemptyLineNo=new int[17];
    int[] jjemptyColNo=new int[17];
    boolean[] jjbeenHere=new boolean[17];
    int curLexState;
    int jjnewStateCnt;
    int jjround;
    int jjmatchedPos;
    int jjmatchedKind;
    private String inputSource="input";
    public String getInputSource() {
        return inputSource;
    }

    public void setInputSource(String inputSource) {
        this.inputSource=inputSource;
    }

    static final String[] lexStateNames={"DEFAULT","JspDirectiveState","JspDirectiveAttributesState","AttrValueState","AfterTagState","InTagState","JspScriptletState","JspExpressionState","JspDeclarationState","JspCommentState","DocTypeState","DocTypeExternalIdState","CDataState","StartTagState","AttrValueBetweenSingleQuotesState","AttrValueBetweenDoubleQuotesState","CommentState",};
    /** Lex State array. */
    public static final int[] jjnewLexState={-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13,13,16,13,10,12,9,8,7,6,1,-1,-1,2,-1,-1,-1,4,4,-1,4,-1,4,-1,4,-1,-1,11,-1,-1,4,-1,-1,4,5,0,-1,4,4,4,3,-1,14,15,-1,-1,-1,5,-1,5,5,-1,5,4,-1,};
    // Bit vector for TOKEN
    static final long[] jjtoToken={0xffffffffffc00001L,0x1fffL,};
    // Bit vector for SKIP
    static final long[] jjtoSkip={0x300000L,0x0L,};
    // Bit vector for SPECIAL
    static final long[] jjtoSpecial={0x200000L,0x0L,};
    JavaCharStream input_stream;
    private final int[] jjrounds=new int[37];
    private final int[] jjstateSet=new int[74];
    private final StringBuffer jjimage=new StringBuffer();
    private StringBuffer image=jjimage;
    private int jjimageLen;
    char curChar;
    /** Constructor. */
    public JspLexer(JavaCharStream stream) {
        input_stream=stream;
    }

    /** Constructor. */
    public JspLexer(JavaCharStream stream,int lexState) {
        this(stream);
        SwitchTo(lexState);
    }

    // Method to reinitialize the jjrounds array.
    private void ReInitRounds() {
        int i;
        jjround=0x80000001;
        for(i=37; 
        i-->0; 
        ) jjrounds[i]=0x80000000; 
    }

    /** Switch to specified lex state. */
    public void SwitchTo(int lexState) {
        if (lexState>=17||lexState<0) throw new LexicalException("Error: Ignoring invalid lexical state : "+lexState+". State unchanged.",LexicalException.INVALID_LEXICAL_STATE);
        else curLexState=lexState;
    }

    /** Get the next Token. */
    public Token getNextToken() {
        Token specialToken=null;
        Token matchedToken;
        int curPos=0;
        EOFLoop:
        while (true) {
            try {
                curChar=input_stream.BeginToken();
            }
            catch(java.io.IOException e) {
                jjmatchedKind=0;
                matchedToken=jjFillToken();
                matchedToken.specialToken=specialToken;
                return matchedToken;
            }
            image=jjimage;
            image.setLength(0);
            jjimageLen=0;
            switch(curLexState) {
                case 0:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0();
                break;
                case 1:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspDirectiveState();
                break;
                case 2:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspDirectiveAttributesState();
                break;
                case 3:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_AttrValueState();
                break;
                case 4:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_AfterTagState();
                break;
                case 5:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_InTagState();
                break;
                case 6:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspScriptletState();
                break;
                case 7:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspExpressionState();
                break;
                case 8:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspDeclarationState();
                break;
                case 9:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_JspCommentState();
                break;
                case 10:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_DocTypeState();
                break;
                case 11:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_DocTypeExternalIdState();
                break;
                case 12:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_CDataState();
                break;
                case 13:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_StartTagState();
                break;
                case 14:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_AttrValueBetweenSingleQuotesState();
                break;
                case 15:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_AttrValueBetweenDoubleQuotesState();
                break;
                case 16:
                jjmatchedKind=0x7FFFFFFF;
                jjmatchedPos=0;
                curPos=jjMoveStringLiteralDfa0_CommentState();
                break;
            }
            if (jjmatchedKind!=0x7FFFFFFF) {
                if (jjmatchedPos+1<curPos) input_stream.backup(curPos-jjmatchedPos-1);
                if ((jjtoToken[jjmatchedKind>>6]&(1L<<(jjmatchedKind&077)))!=0L) {
                    matchedToken=jjFillToken();
                    matchedToken.specialToken=specialToken;
                    TokenLexicalActions(matchedToken);
                    jjmatchedKind=matchedToken.kind;
                    if (jjnewLexState[jjmatchedKind]!=-1) {
                        curLexState=jjnewLexState[jjmatchedKind];
                    }
                    return matchedToken;
                }
                else {
                    if ((jjtoSpecial[jjmatchedKind>>6]&(1L<<(jjmatchedKind&077)))!=0L) {
                        matchedToken=jjFillToken();
                        matchedToken.setUnparsed(true);
                        if (specialToken==null) {
                            specialToken=matchedToken;
                        }
                        else {
                            matchedToken.specialToken=specialToken;
                            specialToken=(specialToken.next=matchedToken);
                        }
                    }
                    if (jjnewLexState[jjmatchedKind]!=-1) curLexState=jjnewLexState[jjmatchedKind];
                    continue EOFLoop;
                }
            }
            int error_line=input_stream.getEndLine();
            int error_column=input_stream.getEndColumn();
            String error_after=null;
            boolean EOFSeen=false;
            try {
                input_stream.readChar();
                input_stream.backup(1);
            }
            catch(java.io.IOException e1) {
                EOFSeen=true;
                error_after=curPos<=1?"":
                input_stream.GetImage();
                if (curChar=='\n'||curChar=='\r') {
                    error_line++;
                    error_column=0;
                }
                else error_column++;
            }
            if (!EOFSeen) {
                input_stream.backup(1);
                error_after=curPos<=1?"":
                input_stream.GetImage();
            }
            throw new LexicalException(EOFSeen,curLexState,error_line,error_column,error_after,curChar,inputSource,LexicalException.LEXICAL_ERROR);
        }
    }

    void TokenLexicalActions(Token matchedToken) {
        switch(jjmatchedKind) {
            default:
            break;
        }
    }

    Token jjFillToken() {
        final Token t;
        final String curTokenImage;
        final int beginLine;
        final int endLine;
        final int beginColumn;
        final int endColumn;
        curTokenImage=input_stream.GetImage();
        beginLine=input_stream.getBeginLine();
        beginColumn=input_stream.getBeginColumn();
        endLine=input_stream.getEndLine();
        endColumn=input_stream.getEndColumn();
        t=Token.newToken(jjmatchedKind,curTokenImage);
        t.beginLine=beginLine;
        t.endLine=endLine;
        t.beginColumn=beginColumn;
        t.endColumn=endColumn;
        t.setInputSource(this.inputSource);
        return t;
    }

    private void jjCheckNAdd(int state) {
        if (jjrounds[state]!=jjround) {
            jjstateSet[jjnewStateCnt++]=state;
            jjrounds[state]=jjround;
        }
    }

    private void jjAddStates(int start,int end) {
        do {
            jjstateSet[jjnewStateCnt++]=jjnextStates[start];
        }
        while (start++!=end);
    }

    private void jjCheckNAddTwoStates(int state1,int state2) {
        jjCheckNAdd(state1);
        jjCheckNAdd(state2);
    }

    private void jjCheckNAddStates(int start,int end) {
        do {
            jjCheckNAdd(jjnextStates[start]);
        }
        while (start++!=end);
    }

    private void jjCheckNAddStates(int start) {
        jjCheckNAdd(jjnextStates[start]);
        jjCheckNAdd(jjnextStates[start+1]);
    }

    private static boolean jjCanMove_0(int hiByte,int i1,int i2,long l1,long l2) {
        switch(hiByte) {
            case 0:
            return(jjbitVec0[i2]&l2)!=0L;
            default:
            return false;
        }
    }

    private static boolean jjCanMove_1(int hiByte,int i1,int i2,long l1,long l2) {
        switch(hiByte) {
            case 0:
            return(jjbitVec3[i2]&l2)!=0L;
            default:
            if ((jjbitVec1[i1]&l1)!=0L) {
                return(jjbitVec2[i2]&l2)!=0L;
            }
            return false;
        }
    }

    private int jjStopAtPos(int pos,int kind) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        return pos+1;
    }

    static final long[] jjbitVec0={0x0L,0x0L,0x0L,0xff7fffffff7fffffL};
    static final long[] jjbitVec1={0xfffffffffffffffeL,0xffffffffffffffffL,0xffffffffffffffffL,0xffffffffffffffffL};
    static final long[] jjbitVec2={0xffffffffffffffffL,0xffffffffffffffffL,0xffffffffffffffffL,0xffffffffffffffffL};
    static final long[] jjbitVec3={0x0L,0x0L,0xffffffffffffffffL,0xffffffffffffffffL};
    private int jjStartNfa(int pos,long active0) {
        return jjMoveNfa(jjStopStringLiteralDfa(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa(int pos,long active0) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0() {
        switch(curChar) {
            case 60:
            jjmatchedKind=22;
            return jjMoveStringLiteralDfa1(0x1ff800000L);
            default:
            return jjMoveNfa(0,0);
        }
    }

    private int jjMoveStringLiteralDfa1(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(0,active0);
            return 1;
        }
        switch(curChar) {
            case 33:
            return jjMoveStringLiteralDfa2(active0,0xd000000L);
            case 37:
            if ((active0&0x80000000L)!=0L) {
                jjmatchedKind=31;
                jjmatchedPos=1;
            }
            return jjMoveStringLiteralDfa2(active0,0x170000000L);
            case 47:
            if ((active0&0x800000L)!=0L) return jjStopAtPos(1,23);
            break;
            case 63:
            if ((active0&0x2000000L)!=0L) return jjStopAtPos(1,25);
            break;
            default:
            break;
        }
        return jjStartNfa(0,active0);
    }

    private int jjMoveStringLiteralDfa2(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(0,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(1,active0);
            return 2;
        }
        switch(curChar) {
            case 33:
            if ((active0&0x20000000L)!=0L) return jjStopAtPos(2,29);
            break;
            case 45:
            return jjMoveStringLiteralDfa3(active0,0x11000000L);
            case 61:
            if ((active0&0x40000000L)!=0L) return jjStopAtPos(2,30);
            break;
            case 64:
            if ((active0&0x100000000L)!=0L) return jjStopAtPos(2,32);
            break;
            case 68:
            return jjMoveStringLiteralDfa3(active0,0x4000000L);
            case 91:
            return jjMoveStringLiteralDfa3(active0,0x8000000L);
            default:
            break;
        }
        return jjStartNfa(1,active0);
    }

    private int jjMoveStringLiteralDfa3(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(1,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(2,active0);
            return 3;
        }
        switch(curChar) {
            case 45:
            if ((active0&0x1000000L)!=0L) return jjStopAtPos(3,24);
            else if ((active0&0x10000000L)!=0L) return jjStopAtPos(3,28);
            break;
            case 67:
            return jjMoveStringLiteralDfa4(active0,0x8000000L);
            case 79:
            return jjMoveStringLiteralDfa4(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa(2,active0);
    }

    private int jjMoveStringLiteralDfa4(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(2,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(3,active0);
            return 4;
        }
        switch(curChar) {
            case 67:
            return jjMoveStringLiteralDfa5(active0,0x4000000L);
            case 68:
            return jjMoveStringLiteralDfa5(active0,0x8000000L);
            default:
            break;
        }
        return jjStartNfa(3,active0);
    }

    private int jjMoveStringLiteralDfa5(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(3,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(4,active0);
            return 5;
        }
        switch(curChar) {
            case 65:
            return jjMoveStringLiteralDfa6(active0,0x8000000L);
            case 84:
            return jjMoveStringLiteralDfa6(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa(4,active0);
    }

    private int jjMoveStringLiteralDfa6(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(4,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(5,active0);
            return 6;
        }
        switch(curChar) {
            case 84:
            return jjMoveStringLiteralDfa7(active0,0x8000000L);
            case 89:
            return jjMoveStringLiteralDfa7(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa(5,active0);
    }

    private int jjMoveStringLiteralDfa7(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(5,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(6,active0);
            return 7;
        }
        switch(curChar) {
            case 65:
            return jjMoveStringLiteralDfa8(active0,0x8000000L);
            case 80:
            return jjMoveStringLiteralDfa8(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa(6,active0);
    }

    private int jjMoveStringLiteralDfa8(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa(6,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa(7,active0);
            return 8;
        }
        switch(curChar) {
            case 69:
            if ((active0&0x4000000L)!=0L) return jjStopAtPos(8,26);
            break;
            case 91:
            if ((active0&0x8000000L)!=0L) return jjStopAtPos(8,27);
            break;
            default:
            break;
        }
        return jjStartNfa(7,active0);
    }

    private int jjMoveNfa(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=1;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        kind=20;
                        jjCheckNAdd(0);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=1-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfaWithStates_JspDirectiveState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspDirectiveState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspDirectiveState() {
        return jjMoveNfa_JspDirectiveState(1,0);
    }

    private int jjMoveNfa_JspDirectiveState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=4;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x100002600L&l)!=0L) {
                            if (kind>20) kind=20;
                            jjCheckNAdd(0);
                        }
                        else if (curChar==36) {
                            if (kind>35) kind=35;
                            jjCheckNAddTwoStates(2,3);
                        }
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        kind=20;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if ((0x3ff001000000000L&l)==0L) break;
                        if (kind>35) kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if ((0x400600000000000L&l)==0L) break;
                        kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>35) kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 2:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>35) kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar!=95) break;
                        if (kind>35) kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        case 2:
                        if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
                        if (kind>35) kind=35;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=4-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_JspDirectiveAttributesState(int pos,long active0) {
        return jjMoveNfa_JspDirectiveAttributesState(jjStopStringLiteralDfa_JspDirectiveAttributesState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_JspDirectiveAttributesState(int pos,long active0) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_JspDirectiveAttributesState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspDirectiveAttributesState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspDirectiveAttributesState() {
        switch(curChar) {
            case 37:
            return jjMoveStringLiteralDfa1_JspDirectiveAttributesState(0x8000000000L);
            case 61:
            return jjStopAtPos(0,37);
            default:
            return jjMoveNfa_JspDirectiveAttributesState(1,0);
        }
    }

    private int jjMoveStringLiteralDfa1_JspDirectiveAttributesState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspDirectiveAttributesState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x8000000000L)!=0L) return jjStopAtPos(1,39);
            break;
            default:
            break;
        }
        return jjStartNfa_JspDirectiveAttributesState(0,active0);
    }

    private int jjMoveNfa_JspDirectiveAttributesState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=10;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x100002600L&l)!=0L) {
                            if (kind>20) kind=20;
                            jjCheckNAdd(0);
                        }
                        else if (curChar==34) jjCheckNAddTwoStates(8,9);
                        else if (curChar==39) jjCheckNAddTwoStates(5,6);
                        else if (curChar==36) {
                            if (kind>36) kind=36;
                            jjCheckNAddTwoStates(2,3);
                        }
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        if (kind>20) kind=20;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if ((0x3ff001000000000L&l)==0L) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if ((0x400600000000000L&l)==0L) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 4:
                        if (curChar==39) jjCheckNAddTwoStates(5,6);
                        break;
                        case 5:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(5,6);
                        break;
                        case 6:
                        if (curChar==39&&kind>38) kind=38;
                        break;
                        case 7:
                        if (curChar==34) jjCheckNAddTwoStates(8,9);
                        break;
                        case 8:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(8,9);
                        break;
                        case 9:
                        if (curChar==34&&kind>38) kind=38;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 2:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar!=95) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        jjCheckNAddTwoStates(5,6);
                        break;
                        case 8:
                        jjCheckNAddTwoStates(8,9);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        case 2:
                        if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
                        if (kind>36) kind=36;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(5,6);
                        break;
                        case 8:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(8,9);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=10-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_AttrValueState(int pos,long active0,long active1) {
        return jjMoveNfa_AttrValueState(jjStopStringLiteralDfa_AttrValueState(pos,active0,active1),pos+1);
    }

    private final int jjStopStringLiteralDfa_AttrValueState(int pos,long active0,long active1) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_AttrValueState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_AttrValueState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_AttrValueState() {
        switch(curChar) {
            case 34:
            return jjStopAtPos(0,65);
            case 39:
            return jjStopAtPos(0,64);
            default:
            return jjMoveNfa_AttrValueState(0,0);
        }
    }

    private int jjMoveNfa_AttrValueState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=1;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        kind=21;
                        jjCheckNAdd(0);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=1-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_AfterTagState(int pos,long active0) {
        return jjMoveNfa_AfterTagState(jjStopStringLiteralDfa_AfterTagState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_AfterTagState(int pos,long active0) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_AfterTagState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_AfterTagState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_AfterTagState() {
        switch(curChar) {
            case 60:
            jjmatchedKind=22;
            return jjMoveStringLiteralDfa1_AfterTagState(0x1ff800000L);
            default:
            return jjMoveNfa_AfterTagState(10,0);
        }
    }

    private int jjMoveStringLiteralDfa1_AfterTagState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 33:
            return jjMoveStringLiteralDfa2_AfterTagState(active0,0xd000000L);
            case 37:
            if ((active0&0x80000000L)!=0L) {
                jjmatchedKind=31;
                jjmatchedPos=1;
            }
            return jjMoveStringLiteralDfa2_AfterTagState(active0,0x170000000L);
            case 47:
            if ((active0&0x800000L)!=0L) return jjStopAtPos(1,23);
            break;
            case 63:
            if ((active0&0x2000000L)!=0L) return jjStopAtPos(1,25);
            break;
            default:
            break;
        }
        return jjStartNfa_AfterTagState(0,active0);
    }

    private int jjMoveStringLiteralDfa2_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(0,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(1,active0);
            return 2;
        }
        switch(curChar) {
            case 33:
            if ((active0&0x20000000L)!=0L) return jjStopAtPos(2,29);
            break;
            case 45:
            return jjMoveStringLiteralDfa3_AfterTagState(active0,0x11000000L);
            case 61:
            if ((active0&0x40000000L)!=0L) return jjStopAtPos(2,30);
            break;
            case 64:
            if ((active0&0x100000000L)!=0L) return jjStopAtPos(2,32);
            break;
            case 68:
            return jjMoveStringLiteralDfa3_AfterTagState(active0,0x4000000L);
            case 91:
            return jjMoveStringLiteralDfa3_AfterTagState(active0,0x8000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(1,active0);
    }

    private int jjMoveStringLiteralDfa3_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(1,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(2,active0);
            return 3;
        }
        switch(curChar) {
            case 45:
            if ((active0&0x1000000L)!=0L) return jjStopAtPos(3,24);
            else if ((active0&0x10000000L)!=0L) return jjStopAtPos(3,28);
            break;
            case 67:
            return jjMoveStringLiteralDfa4_AfterTagState(active0,0x8000000L);
            case 79:
            return jjMoveStringLiteralDfa4_AfterTagState(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(2,active0);
    }

    private int jjMoveStringLiteralDfa4_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(2,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(3,active0);
            return 4;
        }
        switch(curChar) {
            case 67:
            return jjMoveStringLiteralDfa5_AfterTagState(active0,0x4000000L);
            case 68:
            return jjMoveStringLiteralDfa5_AfterTagState(active0,0x8000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(3,active0);
    }

    private int jjMoveStringLiteralDfa5_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(3,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(4,active0);
            return 5;
        }
        switch(curChar) {
            case 65:
            return jjMoveStringLiteralDfa6_AfterTagState(active0,0x8000000L);
            case 84:
            return jjMoveStringLiteralDfa6_AfterTagState(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(4,active0);
    }

    private int jjMoveStringLiteralDfa6_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(4,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(5,active0);
            return 6;
        }
        switch(curChar) {
            case 84:
            return jjMoveStringLiteralDfa7_AfterTagState(active0,0x8000000L);
            case 89:
            return jjMoveStringLiteralDfa7_AfterTagState(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(5,active0);
    }

    private int jjMoveStringLiteralDfa7_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(5,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(6,active0);
            return 7;
        }
        switch(curChar) {
            case 65:
            return jjMoveStringLiteralDfa8_AfterTagState(active0,0x8000000L);
            case 80:
            return jjMoveStringLiteralDfa8_AfterTagState(active0,0x4000000L);
            default:
            break;
        }
        return jjStartNfa_AfterTagState(6,active0);
    }

    private int jjMoveStringLiteralDfa8_AfterTagState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_AfterTagState(6,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_AfterTagState(7,active0);
            return 8;
        }
        switch(curChar) {
            case 69:
            if ((active0&0x4000000L)!=0L) return jjStopAtPos(8,26);
            break;
            case 91:
            if ((active0&0x8000000L)!=0L) return jjStopAtPos(8,27);
            break;
            default:
            break;
        }
        return jjStartNfa_AfterTagState(7,active0);
    }

    private int jjMoveNfa_AfterTagState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=18;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 10:
                        if ((0xefffffefffffffffL&l)!=0L) {
                            if (kind>34) kind=34;
                            jjCheckNAddStates(0,2);
                        }
                        else if (curChar==36) jjstateSet[jjnewStateCnt++]=12;
                        if ((0x100002600L&l)!=0L) {
                            if (kind>21) kind=21;
                            jjCheckNAdd(0);
                        }
                        else if (curChar==36) jjstateSet[jjnewStateCnt++]=1;
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        if (kind>21) kind=21;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if (curChar==39) jjCheckNAddTwoStates(3,4);
                        break;
                        case 3:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(3,4);
                        break;
                        case 4:
                        if (curChar==39) jjCheckNAddStates(3,6);
                        break;
                        case 5:
                        if (curChar==34) jjCheckNAddTwoStates(6,7);
                        break;
                        case 6:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(6,7);
                        break;
                        case 7:
                        if (curChar==34) jjCheckNAddStates(3,6);
                        break;
                        case 8:
                        if ((0xffffff7bffffffffL&l)!=0L) jjCheckNAddStates(3,6);
                        break;
                        case 11:
                        if (curChar==36) jjCheckNAdd(12);
                        break;
                        case 12:
                        if ((0xefffffffffffffffL&l)==0L) break;
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        case 13:
                        if ((0xefffffefffffffffL&l)==0L) break;
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        case 16:
                        if (curChar==36) jjstateSet[jjnewStateCnt++]=15;
                        break;
                        case 17:
                        if (curChar==35) jjstateSet[jjnewStateCnt++]=15;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 10:
                         {
                            if (kind>34) kind=34;
                            jjCheckNAddStates(0,2);
                        }
                        if (curChar==92) jjAddStates(7,8);
                        break;
                        case 1:
                        if (curChar==123) jjCheckNAddStates(3,6);
                        break;
                        case 3:
                        jjCheckNAddTwoStates(3,4);
                        break;
                        case 6:
                        jjCheckNAddTwoStates(6,7);
                        break;
                        case 8:
                        if ((0xdfffffffffffffffL&l)!=0L) jjCheckNAddStates(3,6);
                        break;
                        case 9:
                        if (curChar==125&&kind>33) kind=33;
                        break;
                        case 12:
                        if ((0xf7ffffffffffffffL&l)==0L) break;
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        case 13:
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        case 14:
                        if (curChar==92) jjCheckNAddTwoStates(16,17);
                        break;
                        case 15:
                        if (curChar!=123) break;
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 10:
                        case 13:
                        case 12:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>34) kind=34;
                        jjCheckNAddStates(0,2);
                        break;
                        case 3:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(3,4);
                        break;
                        case 6:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(6,7);
                        break;
                        case 8:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(3,6);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=18-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_InTagState(int pos,long active0) {
        return jjMoveNfa_InTagState(jjStopStringLiteralDfa_InTagState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_InTagState(int pos,long active0) {
        switch(pos) {
            case 0:
            if ((active0&0x2000000000000000L)!=0L) {
                jjmatchedKind=63;
                return-1;
            }
            return-1;
            case 1:
            if ((active0&0x2000000000000000L)!=0L) {
                if (jjmatchedPos==0) {
                    jjmatchedKind=63;
                    jjmatchedPos=0;
                }
                return-1;
            }
            return-1;
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_InTagState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_InTagState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_InTagState() {
        switch(curChar) {
            case 47:
            return jjMoveStringLiteralDfa1_InTagState(0x2000000000000000L);
            case 61:
            return jjStopAtPos(0,62);
            case 62:
            return jjStopAtPos(0,59);
            default:
            return jjMoveNfa_InTagState(1,0);
        }
    }

    private int jjMoveStringLiteralDfa1_InTagState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_InTagState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x2000000000000000L)!=0L) return jjStopAtPos(1,61);
            break;
            default:
            break;
        }
        return jjStartNfa_InTagState(0,active0);
    }

    private int jjMoveNfa_InTagState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=8;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                         {
                            if (kind>63) kind=63;
                        }
                        if ((0x100002600L&l)!=0L) {
                            if (kind>21) kind=21;
                            jjCheckNAdd(0);
                        }
                        else if (curChar==33) jjstateSet[jjnewStateCnt++]=4;
                        else if (curChar==36) {
                            if (kind>58) kind=58;
                            jjCheckNAddTwoStates(2,3);
                        }
                        else if (curChar==63) jjstateSet[jjnewStateCnt++]=4;
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        if (kind>21) kind=21;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if ((0x3ff001000000000L&l)==0L) break;
                        if (kind>58) kind=58;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if ((0x400600000000000L&l)==0L) break;
                        if (kind>58) kind=58;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 4:
                        if (curChar==62&&kind>60) kind=60;
                        break;
                        case 5:
                        if (curChar==63) jjCheckNAdd(4);
                        break;
                        case 6:
                        if (curChar==33) jjCheckNAdd(4);
                        break;
                        case 7:
                        if (kind>63) kind=63;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                         {
                            if (kind>63) kind=63;
                        }
                        if ((0x7fffffe87fffffeL&l)!=0L) {
                            if (kind>58) kind=58;
                            jjCheckNAddTwoStates(2,3);
                        }
                        break;
                        case 2:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>58) kind=58;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar!=95) break;
                        if (kind>58) kind=58;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 7:
                        if (kind>63) kind=63;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        break;
                        case 2:
                        if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
                        if (kind>58) kind=58;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 7:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)&&kind>63) kind=63;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=8-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_JspScriptletState(int pos,long active0) {
        return jjMoveNfa_JspScriptletState(jjStopStringLiteralDfa_JspScriptletState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_JspScriptletState(int pos,long active0) {
        switch(pos) {
            case 0:
            if ((active0&0x10000000000L)!=0L) return 1;
            return-1;
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_JspScriptletState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspScriptletState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspScriptletState() {
        switch(curChar) {
            case 37:
            return jjMoveStringLiteralDfa1_JspScriptletState(0x10000000000L);
            default:
            return jjMoveNfa_JspScriptletState(3,0);
        }
    }

    private int jjMoveStringLiteralDfa1_JspScriptletState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspScriptletState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x10000000000L)!=0L) return jjStopAtPos(1,40);
            break;
            default:
            break;
        }
        return jjStartNfa_JspScriptletState(0,active0);
    }

    private int jjMoveNfa_JspScriptletState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=3;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        if ((0xffffffdfffffffffL&l)!=0L) {
                            if (kind>41) kind=41;
                            jjCheckNAddTwoStates(0,2);
                        }
                        else if (curChar==37) jjstateSet[jjnewStateCnt++]=1;
                        break;
                        case 0:
                        if (curChar==37) jjCheckNAdd(1);
                        break;
                        case 1:
                        if ((0xbfffffffffffffffL&l)==0L) break;
                        if (kind>41) kind=41;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 2:
                        if ((0xffffffdfffffffffL&l)==0L) break;
                        if (kind>41) kind=41;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        if (kind>41) kind=41;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 1:
                        if (kind>41) kind=41;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        case 1:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>41) kind=41;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=3-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_JspExpressionState(int pos,long active0) {
        return jjMoveNfa_JspExpressionState(jjStopStringLiteralDfa_JspExpressionState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_JspExpressionState(int pos,long active0) {
        switch(pos) {
            case 0:
            if ((active0&0x40000000000L)!=0L) return 1;
            return-1;
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_JspExpressionState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspExpressionState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspExpressionState() {
        switch(curChar) {
            case 37:
            return jjMoveStringLiteralDfa1_JspExpressionState(0x40000000000L);
            default:
            return jjMoveNfa_JspExpressionState(3,0);
        }
    }

    private int jjMoveStringLiteralDfa1_JspExpressionState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspExpressionState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x40000000000L)!=0L) return jjStopAtPos(1,42);
            break;
            default:
            break;
        }
        return jjStartNfa_JspExpressionState(0,active0);
    }

    private int jjMoveNfa_JspExpressionState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=3;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        if ((0xffffffdfffffffffL&l)!=0L) {
                            if (kind>43) kind=43;
                            jjCheckNAddTwoStates(0,2);
                        }
                        else if (curChar==37) jjstateSet[jjnewStateCnt++]=1;
                        break;
                        case 0:
                        if (curChar==37) jjCheckNAdd(1);
                        break;
                        case 1:
                        if ((0xbfffffffffffffffL&l)==0L) break;
                        if (kind>43) kind=43;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 2:
                        if ((0xffffffdfffffffffL&l)==0L) break;
                        if (kind>43) kind=43;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        if (kind>43) kind=43;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 1:
                        if (kind>43) kind=43;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        case 1:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>43) kind=43;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=3-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_JspDeclarationState(int pos,long active0) {
        return jjMoveNfa_JspDeclarationState(jjStopStringLiteralDfa_JspDeclarationState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_JspDeclarationState(int pos,long active0) {
        switch(pos) {
            case 0:
            if ((active0&0x100000000000L)!=0L) return 1;
            return-1;
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_JspDeclarationState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspDeclarationState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspDeclarationState() {
        switch(curChar) {
            case 37:
            return jjMoveStringLiteralDfa1_JspDeclarationState(0x100000000000L);
            default:
            return jjMoveNfa_JspDeclarationState(3,0);
        }
    }

    private int jjMoveStringLiteralDfa1_JspDeclarationState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspDeclarationState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x100000000000L)!=0L) return jjStopAtPos(1,44);
            break;
            default:
            break;
        }
        return jjStartNfa_JspDeclarationState(0,active0);
    }

    private int jjMoveNfa_JspDeclarationState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=3;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        if ((0xffffffdfffffffffL&l)!=0L) {
                            if (kind>45) kind=45;
                            jjCheckNAddTwoStates(0,2);
                        }
                        else if (curChar==37) jjstateSet[jjnewStateCnt++]=1;
                        break;
                        case 0:
                        if (curChar==37) jjCheckNAdd(1);
                        break;
                        case 1:
                        if ((0xbfffffffffffffffL&l)==0L) break;
                        if (kind>45) kind=45;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 2:
                        if ((0xffffffdfffffffffL&l)==0L) break;
                        if (kind>45) kind=45;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        if (kind>45) kind=45;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        case 1:
                        if (kind>45) kind=45;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 3:
                        case 2:
                        case 1:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>45) kind=45;
                        jjCheckNAddTwoStates(0,2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=3-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_JspCommentState(int pos,long active0) {
        return jjMoveNfa_JspCommentState(jjStopStringLiteralDfa_JspCommentState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_JspCommentState(int pos,long active0) {
        switch(pos) {
            case 0:
            if ((active0&0x400000000000L)!=0L) return 3;
            return-1;
            case 1:
            if ((active0&0x400000000000L)!=0L) return 4;
            return-1;
            case 2:
            if ((active0&0x400000000000L)!=0L) return 6;
            return-1;
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_JspCommentState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_JspCommentState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_JspCommentState() {
        switch(curChar) {
            case 45:
            return jjMoveStringLiteralDfa1_JspCommentState(0x400000000000L);
            default:
            return jjMoveNfa_JspCommentState(8,0);
        }
    }

    private int jjMoveStringLiteralDfa1_JspCommentState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspCommentState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 45:
            return jjMoveStringLiteralDfa2_JspCommentState(active0,0x400000000000L);
            default:
            break;
        }
        return jjStartNfa_JspCommentState(0,active0);
    }

    private int jjMoveStringLiteralDfa2_JspCommentState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_JspCommentState(0,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspCommentState(1,active0);
            return 2;
        }
        switch(curChar) {
            case 37:
            return jjMoveStringLiteralDfa3_JspCommentState(active0,0x400000000000L);
            default:
            break;
        }
        return jjStartNfa_JspCommentState(1,active0);
    }

    private int jjMoveStringLiteralDfa3_JspCommentState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_JspCommentState(1,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_JspCommentState(2,active0);
            return 3;
        }
        switch(curChar) {
            case 62:
            if ((active0&0x400000000000L)!=0L) return jjStopAtPos(3,46);
            break;
            default:
            break;
        }
        return jjStartNfa_JspCommentState(2,active0);
    }

    private int jjMoveNfa_JspCommentState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=8;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 4:
                        if ((0xffffffdfffffffffL&l)!=0L) {
                            if (kind>47) kind=47;
                            jjCheckNAddStates(9,11);
                        }
                        else if (curChar==37) jjstateSet[jjnewStateCnt++]=6;
                        break;
                        case 3:
                        if ((0xffffdfffffffffffL&l)!=0L) {
                            if (kind>47) kind=47;
                            jjCheckNAddStates(9,11);
                        }
                        else if (curChar==45) jjstateSet[jjnewStateCnt++]=5;
                        if (curChar==45) jjstateSet[jjnewStateCnt++]=4;
                        break;
                        case 8:
                        if ((0xffffdfffffffffffL&l)!=0L) {
                            if (kind>47) kind=47;
                            jjCheckNAddStates(9,11);
                        }
                        else if (curChar==45) jjAddStates(12,13);
                        if (curChar==45) jjCheckNAdd(1);
                        break;
                        case 0:
                        if (curChar==45) jjCheckNAdd(1);
                        break;
                        case 1:
                        if ((0xffffdfffffffffffL&l)==0L) break;
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 2:
                        if (curChar==45) jjCheckNAddTwoStates(3,7);
                        break;
                        case 5:
                        if (curChar==37) jjCheckNAdd(6);
                        break;
                        case 6:
                        if ((0xbfffffffffffffffL&l)==0L) break;
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 7:
                        if (curChar==45) jjCheckNAdd(5);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 4:
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 3:
                        case 1:
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 8:
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 6:
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 4:
                        case 6:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 3:
                        case 1:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        case 8:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>47) kind=47;
                        jjCheckNAddStates(9,11);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=8-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfaWithStates_DocTypeState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_DocTypeState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_DocTypeState() {
        return jjMoveNfa_DocTypeState(1,0);
    }

    private int jjMoveNfa_DocTypeState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=4;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x100002600L&l)!=0L) {
                            if (kind>48) kind=48;
                            jjCheckNAdd(0);
                        }
                        else if ((0x400001000000000L&l)!=0L) {
                            if (kind>49) kind=49;
                            jjCheckNAddTwoStates(2,3);
                        }
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        kind=48;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if ((0x3ff001000000000L&l)==0L) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if ((0x400600000000000L&l)==0L) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 2:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar!=95) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        case 2:
                        if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
                        if (kind>49) kind=49;
                        jjCheckNAddTwoStates(2,3);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=4-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_DocTypeExternalIdState(int pos,long active0) {
        return jjMoveNfa_DocTypeExternalIdState(jjStopStringLiteralDfa_DocTypeExternalIdState(pos,active0),pos+1);
    }

    private final int jjStopStringLiteralDfa_DocTypeExternalIdState(int pos,long active0) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_DocTypeExternalIdState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_DocTypeExternalIdState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_DocTypeExternalIdState() {
        switch(curChar) {
            case 62:
            return jjStopAtPos(0,52);
            case 80:
            return jjMoveStringLiteralDfa1_DocTypeExternalIdState(0x4000000000000L);
            case 83:
            return jjMoveStringLiteralDfa1_DocTypeExternalIdState(0x8000000000000L);
            default:
            return jjMoveNfa_DocTypeExternalIdState(1,0);
        }
    }

    private int jjMoveStringLiteralDfa1_DocTypeExternalIdState(long active0) {
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_DocTypeExternalIdState(0,active0);
            return 1;
        }
        switch(curChar) {
            case 85:
            return jjMoveStringLiteralDfa2_DocTypeExternalIdState(active0,0x4000000000000L);
            case 89:
            return jjMoveStringLiteralDfa2_DocTypeExternalIdState(active0,0x8000000000000L);
            default:
            break;
        }
        return jjStartNfa_DocTypeExternalIdState(0,active0);
    }

    private int jjMoveStringLiteralDfa2_DocTypeExternalIdState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_DocTypeExternalIdState(0,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_DocTypeExternalIdState(1,active0);
            return 2;
        }
        switch(curChar) {
            case 66:
            return jjMoveStringLiteralDfa3_DocTypeExternalIdState(active0,0x4000000000000L);
            case 83:
            return jjMoveStringLiteralDfa3_DocTypeExternalIdState(active0,0x8000000000000L);
            default:
            break;
        }
        return jjStartNfa_DocTypeExternalIdState(1,active0);
    }

    private int jjMoveStringLiteralDfa3_DocTypeExternalIdState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_DocTypeExternalIdState(1,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_DocTypeExternalIdState(2,active0);
            return 3;
        }
        switch(curChar) {
            case 76:
            return jjMoveStringLiteralDfa4_DocTypeExternalIdState(active0,0x4000000000000L);
            case 84:
            return jjMoveStringLiteralDfa4_DocTypeExternalIdState(active0,0x8000000000000L);
            default:
            break;
        }
        return jjStartNfa_DocTypeExternalIdState(2,active0);
    }

    private int jjMoveStringLiteralDfa4_DocTypeExternalIdState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_DocTypeExternalIdState(2,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_DocTypeExternalIdState(3,active0);
            return 4;
        }
        switch(curChar) {
            case 69:
            return jjMoveStringLiteralDfa5_DocTypeExternalIdState(active0,0x8000000000000L);
            case 73:
            return jjMoveStringLiteralDfa5_DocTypeExternalIdState(active0,0x4000000000000L);
            default:
            break;
        }
        return jjStartNfa_DocTypeExternalIdState(3,active0);
    }

    private int jjMoveStringLiteralDfa5_DocTypeExternalIdState(long old0,long active0) {
        active0=active0&old0;
        if ((active0)==0L) return jjStartNfa_DocTypeExternalIdState(3,old0);
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            jjStopStringLiteralDfa_DocTypeExternalIdState(4,active0);
            return 5;
        }
        switch(curChar) {
            case 67:
            if ((active0&0x4000000000000L)!=0L) return jjStopAtPos(5,50);
            break;
            case 77:
            if ((active0&0x8000000000000L)!=0L) return jjStopAtPos(5,51);
            break;
            default:
            break;
        }
        return jjStartNfa_DocTypeExternalIdState(4,active0);
    }

    private int jjMoveNfa_DocTypeExternalIdState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=7;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 1:
                        if ((0x100002600L&l)!=0L) {
                            if (kind>48) kind=48;
                            jjCheckNAdd(0);
                        }
                        else if (curChar==34) jjCheckNAddTwoStates(5,6);
                        else if (curChar==39) jjCheckNAddTwoStates(2,3);
                        break;
                        case 0:
                        if ((0x100002600L&l)==0L) break;
                        if (kind>48) kind=48;
                        jjCheckNAdd(0);
                        break;
                        case 2:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar==39&&kind>53) kind=53;
                        break;
                        case 4:
                        if (curChar==34) jjCheckNAddTwoStates(5,6);
                        break;
                        case 5:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(5,6);
                        break;
                        case 6:
                        if (curChar==34&&kind>53) kind=53;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 2:
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        jjCheckNAddTwoStates(5,6);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 2:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(5,6);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=7-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfaWithStates_CDataState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_CDataState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_CDataState() {
        return jjMoveNfa_CDataState(0,0);
    }

    private int jjMoveNfa_CDataState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=4;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        if (kind>54) kind=54;
                        break;
                        case 1:
                        if (curChar==62&&kind>55) kind=55;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                         {
                            if (kind>54) kind=54;
                        }
                        if (curChar==93) jjstateSet[jjnewStateCnt++]=2;
                        break;
                        case 2:
                        if (curChar==93) jjstateSet[jjnewStateCnt++]=1;
                        break;
                        case 3:
                        if (curChar==93) jjCheckNAdd(2);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)&&kind>54) kind=54;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=4-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfaWithStates_StartTagState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_StartTagState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_StartTagState() {
        return jjMoveNfa_StartTagState(0,0);
    }

    private int jjMoveNfa_StartTagState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=4;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                         {
                            if (kind>57) kind=57;
                        }
                        if (curChar==36) {
                            if (kind>56) kind=56;
                            jjCheckNAddTwoStates(1,2);
                        }
                        break;
                        case 1:
                        if ((0x3ff001000000000L&l)==0L) break;
                        if (kind>56) kind=56;
                        jjCheckNAddTwoStates(1,2);
                        break;
                        case 2:
                        if ((0x400600000000000L&l)==0L) break;
                        if (kind>56) kind=56;
                        jjCheckNAddTwoStates(1,2);
                        break;
                        case 3:
                        if (kind>57) kind=57;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                         {
                            if (kind>57) kind=57;
                        }
                        if ((0x7fffffe87fffffeL&l)!=0L) {
                            if (kind>56) kind=56;
                            jjCheckNAddTwoStates(1,2);
                        }
                        break;
                        case 1:
                        if ((0x7fffffe87fffffeL&l)==0L) break;
                        if (kind>56) kind=56;
                        jjCheckNAddTwoStates(1,2);
                        break;
                        case 2:
                        if (curChar!=95) break;
                        if (kind>56) kind=56;
                        jjCheckNAddTwoStates(1,2);
                        break;
                        case 3:
                        if (kind>57) kind=57;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        break;
                        case 1:
                        if (!jjCanMove_0(hiByte,i1,i2,l1,l2)) break;
                        if (kind>56) kind=56;
                        jjCheckNAddTwoStates(1,2);
                        break;
                        case 3:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)&&kind>57) kind=57;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=4-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_AttrValueBetweenSingleQuotesState(int pos,long active0,long active1) {
        return jjMoveNfa_AttrValueBetweenSingleQuotesState(jjStopStringLiteralDfa_AttrValueBetweenSingleQuotesState(pos,active0,active1),pos+1);
    }

    private final int jjStopStringLiteralDfa_AttrValueBetweenSingleQuotesState(int pos,long active0,long active1) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_AttrValueBetweenSingleQuotesState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_AttrValueBetweenSingleQuotesState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_AttrValueBetweenSingleQuotesState() {
        switch(curChar) {
            case 39:
            return jjStopAtPos(0,69);
            default:
            return jjMoveNfa_AttrValueBetweenSingleQuotesState(9,0);
        }
    }

    private int jjMoveNfa_AttrValueBetweenSingleQuotesState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=37;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                        if ((0xffffff67ffffffffL&l)!=0L) {
                            if (kind>70) kind=70;
                            jjCheckNAddStates(14,16);
                        }
                        else if ((0x1800000000L&l)!=0L) jjAddStates(17,18);
                        if (curChar==60) jjstateSet[jjnewStateCnt++]=26;
                        else if (curChar==35) jjstateSet[jjnewStateCnt++]=10;
                        else if (curChar==36) jjstateSet[jjnewStateCnt++]=0;
                        break;
                        case 1:
                        if (curChar==39) jjCheckNAddTwoStates(2,3);
                        break;
                        case 2:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar==39) jjCheckNAddStates(19,22);
                        break;
                        case 4:
                        if (curChar==34) jjCheckNAddTwoStates(5,6);
                        break;
                        case 5:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(5,6);
                        break;
                        case 6:
                        if (curChar==34) jjCheckNAddStates(19,22);
                        break;
                        case 7:
                        if ((0xffffff7bffffffffL&l)!=0L) jjCheckNAddStates(19,22);
                        break;
                        case 11:
                        if (curChar==39) jjCheckNAddTwoStates(12,13);
                        break;
                        case 12:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(12,13);
                        break;
                        case 13:
                        if (curChar==39) jjCheckNAddStates(23,26);
                        break;
                        case 14:
                        if (curChar==34) jjCheckNAddTwoStates(15,16);
                        break;
                        case 15:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(15,16);
                        break;
                        case 16:
                        if (curChar==34) jjCheckNAddStates(23,26);
                        break;
                        case 17:
                        if ((0xffffff7bffffffffL&l)!=0L) jjCheckNAddStates(23,26);
                        break;
                        case 19:
                        if (curChar==35) jjCheckNAdd(10);
                        break;
                        case 20:
                        if (curChar==61) jjCheckNAddTwoStates(21,23);
                        break;
                        case 21:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=22;
                        break;
                        case 22:
                        if ((0xbfffffffffffffffL&l)!=0L) jjCheckNAddStates(27,29);
                        break;
                        case 23:
                        if ((0xffffffdfffffffffL&l)!=0L) jjCheckNAddStates(27,29);
                        break;
                        case 24:
                        if (curChar==62&&kind>68) kind=68;
                        break;
                        case 25:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=24;
                        break;
                        case 26:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=20;
                        break;
                        case 27:
                        if (curChar==60) jjCheckNAdd(26);
                        break;
                        case 28:
                        if ((0xffffff67ffffffffL&l)==0L) break;
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        case 29:
                        if ((0x1800000000L&l)!=0L) jjstateSet[jjnewStateCnt++]=30;
                        break;
                        case 30:
                        if ((0xffffff7fffffffffL&l)==0L) break;
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        case 33:
                        if (curChar==36) jjstateSet[jjnewStateCnt++]=32;
                        break;
                        case 34:
                        if (curChar==35) jjstateSet[jjnewStateCnt++]=32;
                        break;
                        case 35:
                        if ((0x1800000000L&l)!=0L) jjCheckNAddTwoStates(30,36);
                        break;
                        case 36:
                        if (curChar==39&&kind>71) kind=71;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                         {
                            if (kind>70) kind=70;
                            jjCheckNAddStates(14,16);
                        }
                        if (curChar==92) jjAddStates(30,31);
                        break;
                        case 0:
                        if (curChar==123) jjCheckNAddStates(19,22);
                        break;
                        case 2:
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        jjCheckNAddTwoStates(5,6);
                        break;
                        case 7:
                        if ((0xdfffffffffffffffL&l)!=0L) jjCheckNAddStates(19,22);
                        break;
                        case 8:
                        if (curChar==125&&kind>66) kind=66;
                        break;
                        case 10:
                        if (curChar==123) jjCheckNAddStates(23,26);
                        break;
                        case 12:
                        jjCheckNAddTwoStates(12,13);
                        break;
                        case 15:
                        jjCheckNAddTwoStates(15,16);
                        break;
                        case 17:
                        if ((0xdfffffffffffffffL&l)!=0L) jjCheckNAddStates(23,26);
                        break;
                        case 18:
                        if (curChar==125&&kind>67) kind=67;
                        break;
                        case 22:
                        jjCheckNAddStates(27,29);
                        break;
                        case 23:
                        jjCheckNAddStates(27,29);
                        break;
                        case 28:
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        case 30:
                        if ((0xf7ffffffffffffffL&l)==0L) break;
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        case 31:
                        if (curChar==92) jjCheckNAddTwoStates(33,34);
                        break;
                        case 32:
                        if (curChar!=123) break;
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                        case 28:
                        case 30:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>70) kind=70;
                        jjCheckNAddStates(14,16);
                        break;
                        case 2:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(5,6);
                        break;
                        case 7:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(19,22);
                        break;
                        case 12:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(12,13);
                        break;
                        case 15:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(15,16);
                        break;
                        case 17:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(23,26);
                        break;
                        case 22:
                        case 23:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(27,29);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=37-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfa_AttrValueBetweenDoubleQuotesState(int pos,long active0,long active1) {
        return jjMoveNfa_AttrValueBetweenDoubleQuotesState(jjStopStringLiteralDfa_AttrValueBetweenDoubleQuotesState(pos,active0,active1),pos+1);
    }

    private final int jjStopStringLiteralDfa_AttrValueBetweenDoubleQuotesState(int pos,long active0,long active1) {
        switch(pos) {
            default:
            return-1;
        }
    }

    private int jjStartNfaWithStates_AttrValueBetweenDoubleQuotesState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_AttrValueBetweenDoubleQuotesState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_AttrValueBetweenDoubleQuotesState() {
        switch(curChar) {
            case 34:
            return jjStopAtPos(0,72);
            default:
            return jjMoveNfa_AttrValueBetweenDoubleQuotesState(9,0);
        }
    }

    private int jjMoveNfa_AttrValueBetweenDoubleQuotesState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=37;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                        if ((0xffffffe3ffffffffL&l)!=0L) {
                            if (kind>73) kind=73;
                            jjCheckNAddStates(14,16);
                        }
                        else if ((0x1800000000L&l)!=0L) jjAddStates(17,18);
                        if (curChar==60) jjstateSet[jjnewStateCnt++]=26;
                        else if (curChar==35) jjstateSet[jjnewStateCnt++]=10;
                        else if (curChar==36) jjstateSet[jjnewStateCnt++]=0;
                        break;
                        case 1:
                        if (curChar==39) jjCheckNAddTwoStates(2,3);
                        break;
                        case 2:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(2,3);
                        break;
                        case 3:
                        if (curChar==39) jjCheckNAddStates(19,22);
                        break;
                        case 4:
                        if (curChar==34) jjCheckNAddTwoStates(5,6);
                        break;
                        case 5:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(5,6);
                        break;
                        case 6:
                        if (curChar==34) jjCheckNAddStates(19,22);
                        break;
                        case 7:
                        if ((0xffffff7bffffffffL&l)!=0L) jjCheckNAddStates(19,22);
                        break;
                        case 11:
                        if (curChar==39) jjCheckNAddTwoStates(12,13);
                        break;
                        case 12:
                        if ((0xffffff7fffffffffL&l)!=0L) jjCheckNAddTwoStates(12,13);
                        break;
                        case 13:
                        if (curChar==39) jjCheckNAddStates(23,26);
                        break;
                        case 14:
                        if (curChar==34) jjCheckNAddTwoStates(15,16);
                        break;
                        case 15:
                        if ((0xfffffffbffffffffL&l)!=0L) jjCheckNAddTwoStates(15,16);
                        break;
                        case 16:
                        if (curChar==34) jjCheckNAddStates(23,26);
                        break;
                        case 17:
                        if ((0xffffff7bffffffffL&l)!=0L) jjCheckNAddStates(23,26);
                        break;
                        case 19:
                        if (curChar==35) jjCheckNAdd(10);
                        break;
                        case 20:
                        if (curChar==61) jjCheckNAddTwoStates(21,23);
                        break;
                        case 21:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=22;
                        break;
                        case 22:
                        if ((0xbfffffffffffffffL&l)!=0L) jjCheckNAddStates(27,29);
                        break;
                        case 23:
                        if ((0xffffffdfffffffffL&l)!=0L) jjCheckNAddStates(27,29);
                        break;
                        case 24:
                        if (curChar==62&&kind>68) kind=68;
                        break;
                        case 25:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=24;
                        break;
                        case 26:
                        if (curChar==37) jjstateSet[jjnewStateCnt++]=20;
                        break;
                        case 27:
                        if (curChar==60) jjCheckNAdd(26);
                        break;
                        case 28:
                        if ((0xffffffe3ffffffffL&l)==0L) break;
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        case 29:
                        if ((0x1800000000L&l)!=0L) jjstateSet[jjnewStateCnt++]=30;
                        break;
                        case 30:
                        if ((0xfffffffbffffffffL&l)==0L) break;
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        case 33:
                        if (curChar==36) jjstateSet[jjnewStateCnt++]=32;
                        break;
                        case 34:
                        if (curChar==35) jjstateSet[jjnewStateCnt++]=32;
                        break;
                        case 35:
                        if ((0x1800000000L&l)!=0L) jjCheckNAddTwoStates(30,36);
                        break;
                        case 36:
                        if (curChar==34&&kind>74) kind=74;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                         {
                            if (kind>73) kind=73;
                            jjCheckNAddStates(14,16);
                        }
                        if (curChar==92) jjAddStates(30,31);
                        break;
                        case 0:
                        if (curChar==123) jjCheckNAddStates(19,22);
                        break;
                        case 2:
                        jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        jjCheckNAddTwoStates(5,6);
                        break;
                        case 7:
                        if ((0xdfffffffffffffffL&l)!=0L) jjCheckNAddStates(19,22);
                        break;
                        case 8:
                        if (curChar==125&&kind>66) kind=66;
                        break;
                        case 10:
                        if (curChar==123) jjCheckNAddStates(23,26);
                        break;
                        case 12:
                        jjCheckNAddTwoStates(12,13);
                        break;
                        case 15:
                        jjCheckNAddTwoStates(15,16);
                        break;
                        case 17:
                        if ((0xdfffffffffffffffL&l)!=0L) jjCheckNAddStates(23,26);
                        break;
                        case 18:
                        if (curChar==125&&kind>67) kind=67;
                        break;
                        case 22:
                        jjCheckNAddStates(27,29);
                        break;
                        case 23:
                        jjCheckNAddStates(27,29);
                        break;
                        case 28:
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        case 30:
                        if ((0xf7ffffffffffffffL&l)==0L) break;
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        case 31:
                        if (curChar==92) jjCheckNAddTwoStates(33,34);
                        break;
                        case 32:
                        if (curChar!=123) break;
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 9:
                        case 28:
                        case 30:
                        if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
                        if (kind>73) kind=73;
                        jjCheckNAddStates(14,16);
                        break;
                        case 2:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(2,3);
                        break;
                        case 5:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(5,6);
                        break;
                        case 7:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(19,22);
                        break;
                        case 12:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(12,13);
                        break;
                        case 15:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddTwoStates(15,16);
                        break;
                        case 17:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(23,26);
                        break;
                        case 22:
                        case 23:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)) jjCheckNAddStates(27,29);
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=37-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    private int jjStartNfaWithStates_CommentState(int pos,int kind,int state) {
        jjmatchedKind=kind;
        jjmatchedPos=pos;
        try {
            curChar=input_stream.readChar();
        }
        catch(java.io.IOException e) {
            return pos+1;
        }
        return jjMoveNfa_CommentState(state,pos+1);
    }

    private int jjMoveStringLiteralDfa0_CommentState() {
        return jjMoveNfa_CommentState(0,0);
    }

    private int jjMoveNfa_CommentState(int startState,int curPos) {
        int startsAt=0;
        jjnewStateCnt=6;
        int i=1;
        jjstateSet[0]=startState;
        int kind=0x7fffffff;
        while (true) {
            if (++jjround==0x7fffffff) {
                ReInitRounds();
            }
            if (curChar<64) {
                long l=1L<<curChar;
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                         {
                            if (kind>76) kind=76;
                        }
                        if (curChar==45) jjAddStates(32,33);
                        break;
                        case 1:
                        if (curChar==45) jjCheckNAddTwoStates(2,5);
                        break;
                        case 2:
                        if (curChar==45) jjAddStates(34,35);
                        break;
                        case 3:
                        if (curChar==32) jjCheckNAddTwoStates(3,4);
                        break;
                        case 4:
                        if (curChar==62&&kind>75) kind=75;
                        break;
                        case 5:
                        if (curChar==62&&kind>75) kind=75;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else if (curChar<128) {
                long l=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        kind=76;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            else {
                int hiByte=(int)(curChar>>8);
                int i1=hiByte>>6;
                long l1=1L<<(hiByte&077);
                int i2=(curChar&0xff)>>6;
                long l2=1L<<(curChar&077);
                do {
                    switch(jjstateSet[--i]) {
                        case 0:
                        if (jjCanMove_1(hiByte,i1,i2,l1,l2)&&kind>76) kind=76;
                        break;
                        default:
                        break;
                    }
                }
                while (i!=startsAt);
            }
            if (kind!=0x7fffffff) {
                jjmatchedKind=kind;
                jjmatchedPos=curPos;
                kind=0x7fffffff;
            }
            ++curPos;
            if ((i=jjnewStateCnt)==(startsAt=6-(jjnewStateCnt=startsAt))) return curPos;
            try {
                curChar=input_stream.readChar();
            }
            catch(java.io.IOException e) {
                return curPos;
            }
        }
    }

    static final int[] jjnextStates={11,13,14,2,5,8,9,16,17,0,1,2,3,7,29,28,31,30,36,1,4,7,8,11,14,17,18,21,23,25,33,34,2,5,3,4};
}
